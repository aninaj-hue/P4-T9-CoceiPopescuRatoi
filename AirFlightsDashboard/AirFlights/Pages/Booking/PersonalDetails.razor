@{
    var showClass = IsVisible ? "d-block" : "d-none";
}
<div class="toast-container p-3 @showClass" data-bs-autohide="true" data-bs-delay="5000">
    <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <strong class="me-auto">Personal Details</strong>
            <button type="button" class="btn-close" aria-label="Close" @onclick="Close"></button>
        </div>

        <div class="toast-body">
            @BodyText
            <Validation Validator="ValidationRule.IsNotEmpty">
                <Addons>
                    <Addon AddonType="AddonType.Body">
                        <TextEdit Placeholder="Enter first name" />
                    </Addon>
                    <ValidationNone></ValidationNone>
                    <ValidationSuccess></ValidationSuccess>
                    <ValidationError>Enter valid name!</ValidationError>
                </Addons>
            </Validation>
            <Validation Validator="ValidationRule.IsNotEmpty">
                <Addons>
                    <Addon AddonType="AddonType.Body">
                        <TextEdit Placeholder="Enter last name" />
                    </Addon>
                    <ValidationNone></ValidationNone>
                    <ValidationSuccess></ValidationSuccess>
                    <ValidationError>Enter valid name!</ValidationError>
                </Addons>
            </Validation>
            <Fields>
                <Field ColumnSize="ColumnSize.IsFull.OnTablet.IsHalf.OnDesktop">
                    <FieldLabel>
                        Adult(12+ yrs)
                    </FieldLabel>
                    <FieldBody>
                        <Select TValue="string">
                            <SelectItem>0</SelectItem>
                            <SelectItem>1</SelectItem>
                            <SelectItem>2</SelectItem>
                            <SelectItem>3</SelectItem>
                            <SelectItem>4</SelectItem>
                            <SelectItem>5+</SelectItem>
                        </Select>
                    </FieldBody>
                </Field>
                <Field ColumnSize="ColumnSize.IsFull.OnTablet.IsHalf.OnDesktop">
                    <FieldLabel>
                        Infant(under 2 yrs)
                    </FieldLabel>
                    <FieldBody>
                        <Select TValue="string">
                            <SelectItem>0</SelectItem>
                            <SelectItem>1</SelectItem>
                            <SelectItem>2</SelectItem>
                            <SelectItem>3</SelectItem>
                            <SelectItem>4</SelectItem>
                            <SelectItem>5+</SelectItem>
                        </Select>
                    </FieldBody>
                </Field>
            </Fields>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public bool IsVisible { get; set; }

    [Parameter]
    public EventCallback<bool> IsVisibleChanged { get; set; }

    [Parameter]
    public string? HeaderText { get; set; }

    [Parameter]
    public string? BodyText { get; set; }

    public void Show(string bodyText, string headerText = "")
    {
        HeaderText = headerText;
        BodyText = bodyText;
        IsVisible = true;
        StateHasChanged();
    }

    private void Close()
    {
        HeaderText = string.Empty;
        BodyText = string.Empty;
        IsVisible = false;
        StateHasChanged();
    }
}
